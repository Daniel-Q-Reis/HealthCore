name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      # Define env vars at the job level to be inherited by all steps.
      DJANGO_SETTINGS_MODULE: healthcore.settings.test
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DB_HOST: localhost
      DB_NAME: healthcore_db_test
      DB_USER: postgres
      DB_PASSWORD: postgres
      REDIS_URL: redis://localhost:6379/0
      CELERY_BROKER_URL: redis://localhost:6379/0
      CELERY_RESULT_BACKEND: redis://localhost:6379/0
      # Path for mypy to find Django stubs.
      MYPYPATH: ".mypy_stubs"

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: healthcore_db_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run linters
      run: |
        black --check .
        ruff check .

    - name: Run type checking
      run: mypy --strict .

    - name: Run security scanning
      run: bandit -r .

    # The following steps run only if the quality checks pass.
    # They require database access and are therefore slower.
    - name: Run migrations
      run: python manage.py migrate

    - name: Run tests
      run: pytest